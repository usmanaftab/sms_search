package com.d3velopers.sms_search.dao.pojos;
// Generated Apr 14, 2012 12:14:54 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Response generated by hbm2java
 */
@Entity
@Table(name="Response"
    ,catalog="sms_search"
)
public class Response  implements java.io.Serializable {


     private Integer id;
     private Query query;
     private String response;
     private Date dateCreated;

    public Response() {
    }

    public Response(Query query, String response, Date dateCreated) {
       this.query = query;
       this.response = response;
       this.dateCreated = dateCreated;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Query_ID", nullable=false)
    public Query getQuery() {
        return this.query;
    }
    
    public void setQuery(Query query) {
        this.query = query;
    }
    
    @Column(name="Response", nullable=false)
    public String getResponse() {
        return this.response;
    }
    
    public void setResponse(String response) {
        this.response = response;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateCreated", nullable=false, length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }




}


